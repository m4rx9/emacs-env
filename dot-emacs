;; # load-path
(add-to-list 'load-path "~/.emacs.d/plugins/")
(add-to-list 'load-path "~/.emacs.d/")

(require 'package)
;; Add the original Emacs Lisp Package Archive
(add-to-list 'package-archives
             '("elpa" . "http://tromey.com/elpa/"))
;; Add the user-contributed repository
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
;; from Bogus
(add-to-list 'package-archives
	     '("melpa" . "http://melpa.milkbox.net/packages/"))
(setq inhibit-startup-message t)
(setq-default transient-mark-mode t)
(global-font-lock-mode t)


;; # save desktop http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html # siagle sie pyta kur***
;;(desktop-save-mode 1)


;; # color (set-face-background 'highlight "#FFF498")  ;; orange
(global-hl-line-mode t)


(setq mode-line-format
          (list
           ;; value of `mode-name'
           "%m: "
           ;; value of current buffer name
           "buffer %b, "
           ;; value of current line number
           "line %l "
           "-- user: "
           ;; value of user
           (getenv "USER")))


(setq frame-title-format
  '("emacs%@" (:eval (system-name)) ": " (:eval (if (buffer-file-name)
                (abbreviate-file-name (buffer-file-name))
                  "%b")) " [%*]"))


;; # set a font
(when window-system
(set-face-font 
      'default '
      "-misc-fixed-medium-r-normal--13-*-*-*-*-*-iso10646-1"))


;; # let make happy all emacs clients
(server-start)


;; # linum
;;(require 'linum)
;;(global-linum-mode t)


;; # fullscreen http://www.emacswiki.org/emacs/FullScreen#toc22
(defun toggle-fullscreen (&optional f)
      (interactive)
      (let ((current-value (frame-parameter nil 'fullscreen)))
           (set-frame-parameter nil 'fullscreen
                                (if (equal 'fullboth current-value)
                                    (if (boundp 'old-fullscreen) old-fullscreen nil)
                                    (progn (setq old-fullscreen current-value)
                                           'fullboth)))))

    (global-set-key [f11] 'toggle-fullscreen)

    ; Make new frames fullscreen by default. Note: this hook doesn't do
    ; anything to the initial frame if it's in your .emacs, since that file is
    ; read _after_ the initial frame is created.
    (add-hook 'after-make-frame-functions 'toggle-fullscreen)


;; # bookmark+ http://www.emacswiki.org/emacs/bookmark%2B-doc.el http://www.cs.cmu.edu/cgi-bin/info2www?%28emacs%29Bookmarks
(setq bookmark-save-flag 1)
(load "bookmark+.el")
(require 'bookmark+)


;; # frame-title-format
(setq frame-title-format
      (list (format "%s %%S: %%j " (system-name))
       '(buffer-file-name "%f" (dired-directory dired-directory "%b"))))


;; # time
(display-time)


;; ralee mode is good for RNA alignment editing # http://personalpages.manchester.ac.uk/staff/sam.griffiths-jones/software/ralee/
(add-to-list 'load-path "~/.emacs.d/plugins/ralee-0.7/elisp")
(autoload 'ralee-mode "ralee-mode" "Yay! RNA things" t)
(setq auto-mode-alist (cons '("\\.stk$" . ralee-mode) auto-mode-alist))

(add-to-list 'load-path "~/.emacs.d/plugins/helm")
    (require 'helm-config)


;; # markdown-mode: automatically load it # work
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

;; # lisp-mode: automatically load it # work
(add-to-list 'auto-mode-alist '("\\dot-emacs\\'" . lisp-mode))
(add-to-list 'auto-mode-alist '("\\magnus-python\\'" . lisp-mode))

;; doc-view
(require 'doc-view)

;; unicode stuff
(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(set-clipboard-coding-system 'utf-8)
(prefer-coding-system 'utf-8)


;; sql.el
(require 'sql)


;; pymacs
(pymacs-load "manglers")
(pymacs-load "add-task")
(pymacs-load "insert")
(pymacs-load "preview")

;;org-mode
(setq load-path (cons "/home/magnus/.emacs.d/plugins/org-7.8.11/lisp" load-path))
(require 'org-install)

;; Set to the location of your Org files on your local system
(setq org-directory "/home/magnus/Dropbox/Sandbox/Org")
;; Set to the name of the file where new notes will be stored
(setq org-mobile-inbox-for-pull "/home/magnus/Dropbox/INBOX-HTC.org")
;; Set to <your Dropbox root directory>/MobileOrg.
(setq org-mobile-directory "/home/magnus/Dropbox/MobileOrg")
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(display-time-mode t)
 '(fringe-mode (quote (0)) nil (fringe))
 '(org-indent-indentation-per-level 5)
 '(org-indent-mode-turns-on-hiding-stars t)
 '(save-place t nil (saveplace))
 '(show-paren-mode t)
 '(speedbar-default-position (quote left))
 '(speedbar-use-images t)
 '(sr-speedbar-right-side nil)
 '(tool-bar-mode nil)
 '(tool-bar-position (quote right)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(setq org-todo-keywords (quote ((sequence "TODO" "IN_PROGRESS" "CANCELED" "DONE"))))
(setq org-todo-keyword-faces
           '(("TODO" . org-warning) ("IN_PROGRESS" . "yellow")
             ("CANCELED" . (:foreground "blue" :weight bold))))

;; org-mode installation for repo
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)

(setq org-agenda-files (list "/home/magnus/Dropbox/Sandbox/tutorials/tutorials/Emacs-org-mode/test.org" "/home/magnus/Dropbox/Sandbox/TODO.org"))


;; http://code.google.com/p/emacs-nav/
(add-to-list 'load-path "~/.emacs.d/plugins/emacs-nav/emacs-nav-49/")
(require 'nav)
(global-set-key [f8] 'nav-toggle)


;; javascript http://joost.zeekat.nl/wp-content/javascript.el
(autoload 'javascript-mode "javascript" nil t)
(add-to-list 'auto-mode-alist '("\\.js\\'" . javascript-mode))


;;; thanks to http://www.emacswiki.org/emacs/AnsiColor
;;(add-hook ‘shell-mode-hook ‘ansi-color-for-comint-mode-on)

;;
;;(setq term-default-bg-color "#211E1E")
;;(setq term-default-fg-color "#AAAAAA")


;; # python el
(load-library "magnus-python")

;; http://stackoverflow.com/questions/268088/how-to-remove-the-prompt-for-killing-emacsclient-buffers
(remove-hook 'kill-buffer-query-functions 'server-kill-buffer-query-function)





;; @todo
;; (load "buff-menu+.el")
;; (require 'buff-menu+)


;;grepplus
(load "grep+.el")
(require 'grep+)



;; lista
(global-set-key (kbd "C-x C-b") 'buffer-menu)


;; pdb.el
(load-file "~/.emacs.d/plugins/pdb-mode.el")
(setq pdb-rasmol-name "/usr/bin/pymol")
(setq auto-mode-alist
     (cons (cons "pdb$" 'pdb-mode) 
            auto-mode-alist ) )
(autoload 'pdb-mode "PDB")


;;color-theme 
;;(require 'color-theme)
;;(color-theme-initialize)
;;(color-theme-tty-dark)

;;ifind-mode
(defvar workspace-dir "~/Dropbox/")
(load "~/.emacs.d/plugins/ifind-mode.el")


;;ifind-mode
(load "~/.emacs.d/plugins/mmfinder-mode.el")


;;keybinding
(global-set-key (kbd "C-c i") 'insert-screenshotfromclipboard)
(global-set-key (kbd "C-c p") 'preview-preview)

;; # set a font
;;(when window-system
(set-face-font 
      'default '
     "-misc-fixed-medium-r-normal--12-*-*-*-*-*-iso10646-1")
;;load images
(autoload 'iimage-mode "iimage" "SUpport Inline image minor mode." t)
