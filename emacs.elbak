;;; dot-emacs.el --- Magnus Env
;;; Commentary:
;;;  https://github.com/mmagnus/emacs-env

;; Emacs Lisp Package Archive
(require 'package)
;; Add the user-contributed repository
(add-to-list 'package-archives
            '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives
             '("elpa" . "https://tromey.com/elpa/"))
(add-to-list 'package-archives
             '("marmalade" . "https://marmalade-repo.org/packages/"))
(package-initialize)

(global-set-key "\C-cR" 'rename-buffer)
(global-set-key "\C-cl" 'locate)
(global-set-key "\C-cq" 'grep)
;; Emacs lips mode <http://ergoemacs.org/emacs/reclaim_keybindings.html>
(define-key emacs-lisp-mode-map (kbd "C-c r") 'eval-region)
(global-set-key "\C-xt" 'term)

;(smart-mode-line-enable)

;; https://stackoverflow.com/questions/13242165/emacs-auto-complete-popup-menu-broken
(setq popup-use-optimized-column-computation nil)
(tooltip-mode -1)
(setq tooltip-use-echo-area t)


;; https://github.com/realgud/realgud/wiki/ANSI-Terminal-Escape-appearing-in-Buffers
(setenv "TERM" "dumb")

;; let make happy all emacs clients
(server-start)
(setq inhibit-startup-message t)
(setq inhibit-splash-screen t)

;; # bookmark+ http://www.emacswiki.org/emacs/bookmark%2B-doc.el http://www.cs.cmu.edu/cgi-bin/info2www?%28emacs%29Bookmarks
;'(load "bookmark+.el")
;(require 'bookmark+)
(setq bookmark-save-flag 1)   ;; autosave each change)
(bookmark-bmenu-list)

;; A GNU Emacs library to ensure environment variables inside Emacs look the same as in the user's shell.
;; https://github.com/purcell/exec-path-from-shell
(when (memq window-system '(mac ns))
 (exec-path-from-shell-initialize))


;; https://www.emacswiki.org/emacs/AlarmBell
(setq ring-bell-function 'ignore)


;; used mostly for my geekbook, reload a file if modified
;; auto revert http://stackoverflow.com/questions/1480572/how-to-have-emacs-auto-refresh-all-buffers-when-files-have-changed-on-disk
(global-auto-revert-mode t)


;; https://www.emacswiki.org/emacs/ShowWhiteSpace
(require 'blank-mode)

; '(default ((t (:family "Monaco" :foundry "unknown" :slant normal :weight normal :height 110 :width normal)))))

;; https://www.reddit.com/r/emacs/comments/5gkf33/show_clocking_time_of_current_task_to_file/
;; https://stackoverflow.com/questions/2020941/how-can-i-hide-the-backup-files-that-emacs-creates
;; Don't clutter up directories with files~
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))
;(setq dotfiles-dir (file-name-directory (or load-file-name (buffer-file-name))))
;(setq backup-directory-alist `(("." . ,(expand-file-name
 ;                                   (concat dotfiles-dir "backups")))))

;; Don't clutter with #files either
;(setq auto-save-file-name-transforms
;      `((".*" ,(expand-file-name (concat dotfiles-dir "backups")))))


;; https://www.emacswiki.org/emacs/NoTabs
;(setq-default indent-tabs-mode nil)


;; images in emacs
;(define-key markdown-mode-map (kbd "C-c R") 'markdown-display-inline-images)

;(add-to-list 'load-path "~/iCloud/geekbook/notes-debugger/")
;(require 'markdown-notes-style-checker)

; i tired to revert back overwrite functon, but I can;t
;(load-file "/Applications/Emacs.app/Contents/Resources/lisp/term/ns-win.elc")

;; autolist
(add-hook 'org-mode-hook (lambda () (org-autolist-mode)))


(defun owb (n)
  "Select Nth previous windows."
  (interactive "P\nbFrobnicate buffer: ")
  (other-window (- n)))

(load-file "~/.emacs.d/plugins/calendar-add-events/calendar-add-events.el")

(defun replace-in-string (what with in)
  (replace-regexp-in-string (regexp-quote what) with in nil 'literal))

(setq locate-command "fx")

;; https://www.masteringemacs.org/article/introduction-to-ido-mode
;(setq ido-enable-flex-matching t)
;(setq ido-everywhere t)
;(ido-mode 1)

;; OrgMode https://stackoverflow.com/questions/11670654/how-to-resize-images-in-org-mode
(setq org-image-actual-width nil)
;; https://stackoverflow.com/questions/8095715/emacs-auto-complete-mode-at-startup
;(global-auto-complete-mode nil)
;(auto-complete-mode '(not markdown-mode))
;; remove auto-fill mode
(remove-hook 'markdown-mode-hook 'auto-complete-mode t)
;(auto-complete-mode)
(defadvice auto-complete-mode (around disable-auto-complete-for-python)
  (unless (eq major-mode 'markdown-mode) ad-do-it))
(ad-activate 'auto-complete-mode)
; https://stackoverflow.com/questions/24814988/emacs-disable-auto-complete-in-python-mode
;;

;(add-to-list 'load-path "~/.emacs.d/plugins/org-taskjuggler/elisp/")
;(require 'org-taskjuggler)

;(add-hook 'org-agenda-finalize-hook 'org-timeline-insert-timeline :append)
;; https://stackoverflow.com/questions/15390178/emacs-and-symbolic-links
(setq vc-follow-symlinks t)

;; auto-load for debugging and tests
;;(find-file-other-window "~/workspace/emacs-env/dot-emacs.d/org-mode-clock-bar.el")
;;(find-file-other-window "~/iCloud/geekbook/notes/life-curr.org")
;(org-clock-get-clock-string)
;;(find-file-other-window "~/.emacs")



;;(load "~/.emacs.d/org-mode-clock-bar.el")
;(setq org-clock-mode-line-total 'current)
;(message org-clock-mode-line-total)

;; hide project name
;(diminish 'projectile-mode)

;; my dirty hack to get -i in grep
(load-file "~/.emacs.d/plugins/grep.el")

;(load "~/workspace/emacs-env/defuns.el")
;(load "~/workspace/emacs-env/writing.el")
;(load "~/workspace/emacs-env/theme.el")
;(load "~/workspace/emacs-env/web-dev.el")
(load "~/workspace/emacs-env/python.el")
(load "~/workspace/emacs-env/mac.el")
(provide 'dot-emacs)
;;; dot-emacs.el ends here
